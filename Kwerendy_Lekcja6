Zadanie 1)
1)Napisz wyzwalacz, ktory przed wstawieniem lub modyfikacja tabeli kreatura sprawdzi czy waga jest wieksza od zera

DELIMITER $$
CREATE TRIGGER pierwszy1
BEFORE INSERT ON kreatura
FOR EACH ROW
BEGIN
IF NEW.waga <= 0 THEN
SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Waga musi być większa od zera.';
END IF;
END $$
DELIMITER ;


DELIMITER $$
CREATE TRIGGER pierwszy2
BEFORE UPDATE ON kreatura
FOR EACH ROW
BEGIN
IF NEW.waga <= 0 THEN
SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Waga musi być większa od zera.';
END IF;
END $$
DELIMITER ;

Zadanie 2)
1) Stwórz tabele archiwum_wypraw z polami id_wyprawy, nazwa, data_rozpoczecia, data_zakonczenia, kierownik(varchar), 
do której będą wstawiane rekordy po usunięciu z tabeli wyprawa. Do kolumny kierownik wstawiane jest nazwa kreatury na podstawie usuwanego id_kreatury

CREATE TABLE archiwum_wypraw(
id_wyprawy INT PRIMARY KEY,
nazwa VARCHAR(255),
data_rozpoczecia DATE,
data_zakonczenia DATE,
kierownik VARCHAR(255));

CREATE OR REPLACE VIEW [Brazil Customers] AS
SELECT CustomerName, ContactName, City
FROM Customers
WHERE Country = "Brazil";

DELIMITER $$
CREATE TRIGGER drugi1
BEFORE DELETE ON kreatura
FOR EACH ROW
BEGIN 
INSERT INTO archiwum_wypraw (
id_wyprawy,
nazwa,
data_rozpoczecia,
data_zakonczenia,
kierownik)
VALUES (
wyprawa.id_wyprawy,
wyprawa.nazwa,
wyprawa.data_rozpoczecia,
wyprawa.data_zakonczenia,
(SELECT nazwa from kreatura where idKreatury = OLD.kierownik));
END $$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER drugi1
BEFORE DELETE ON kreatura
FOR EACH ROW
BEGIN 
INSERT INTO archiwum_wypraw (
id_wyprawy,
nazwa,
data_rozpoczecia,
data_zakonczenia,
kierownik)
SELECT 
wyprawa.id_wyprawy,
wyprawa.nazwa,
wyprawa.data_rozpoczecia,
wyprawa.data_zakonczenia,
wyprawa.nazwa 
FROM wyprawa
JOIN 
kreatura ON kreatura.idKreatury = wyprawa.kierownik
WHERE 
kreatura.idKreatury = OLD.idKreatury;
END $$
DELIMITER ;


